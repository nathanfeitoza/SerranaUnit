// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Serrana.Models.Context;

namespace Serrana.Migrations
{
    [DbContext(typeof(SerranaContext))]
    partial class SerranaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Serrana.Models.Agrotoxico", b =>
                {
                    b.Property<int>("Agro_Id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("Qtd_Disponivel");

                    b.Property<string>("Unidade_Medida")
                        .IsRequired()
                        .HasMaxLength(5);

                    b.HasKey("Agro_Id");

                    b.ToTable("TB_AGROTOXICO");
                });

            modelBuilder.Entity("Serrana.Models.AplicacaoAgrotoxico", b =>
                {
                    b.Property<int>("Area_Id");

                    b.Property<int>("Agro_Id");

                    b.Property<int>("Qtd_Aplicada");

                    b.Property<string>("Tipo");

                    b.HasKey("Area_Id", "Agro_Id");

                    b.HasIndex("Agro_Id");

                    b.ToTable("TB_AplicacaoAgrotoxico");
                });

            modelBuilder.Entity("Serrana.Models.Area", b =>
                {
                    b.Property<int>("Area_Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cultura_Id");

                    b.Property<int>("Maticula_Funcionario");

                    b.Property<int>("Status");

                    b.Property<float>("Tamanho")
                        .HasMaxLength(20);

                    b.HasKey("Area_Id");

                    b.HasIndex("Cultura_Id");

                    b.HasIndex("Maticula_Funcionario");

                    b.ToTable("TB_AREA");
                });

            modelBuilder.Entity("Serrana.Models.Ataque", b =>
                {
                    b.Property<int>("Cultura_Id");

                    b.Property<int>("Praga_Id");

                    b.HasKey("Cultura_Id", "Praga_Id");

                    b.HasIndex("Praga_Id");

                    b.ToTable("TB_ATAQUE");
                });

            modelBuilder.Entity("Serrana.Models.Combate", b =>
                {
                    b.Property<int>("Agro_Id");

                    b.Property<int>("Praga_Id");

                    b.HasKey("Agro_Id", "Praga_Id");

                    b.HasIndex("Praga_Id");

                    b.ToTable("TB_COMBATE");
                });

            modelBuilder.Entity("Serrana.Models.Cultura", b =>
                {
                    b.Property<int>("Cultura_Id");

                    b.Property<string>("Data_Inicio");

                    b.Property<int>("Mes_Fim");

                    b.Property<int>("Mes_Inicio");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("TempoMaximo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Cultura_Id");

                    b.ToTable("TB_CULTURA");
                });

            modelBuilder.Entity("Serrana.Models.Funcionario", b =>
                {
                    b.Property<int>("Matricula");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Data_Admissao")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Matricula");

                    b.ToTable("TB_FUNCIONARIO");
                });

            modelBuilder.Entity("Serrana.Models.Praga", b =>
                {
                    b.Property<int>("Praga_Id");

                    b.Property<string>("Estacao")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Nome_Cientifico")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Nome_Popular")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Praga_Id");

                    b.ToTable("TB_PRAGA");
                });

            modelBuilder.Entity("Serrana.Models.AplicacaoAgrotoxico", b =>
                {
                    b.HasOne("Serrana.Models.Agrotoxico", "Agrotoxico")
                        .WithMany("AplicacoesAgrotoxicos")
                        .HasForeignKey("Agro_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Serrana.Models.Area", "Area")
                        .WithMany("AplicacoesAgrotoxicos")
                        .HasForeignKey("Area_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Serrana.Models.Area", b =>
                {
                    b.HasOne("Serrana.Models.Cultura", "Cultura")
                        .WithMany("Areas")
                        .HasForeignKey("Cultura_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Serrana.Models.Funcionario", "Funcionario")
                        .WithMany("Areas")
                        .HasForeignKey("Maticula_Funcionario")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Serrana.Models.Ataque", b =>
                {
                    b.HasOne("Serrana.Models.Cultura", "Cultura")
                        .WithMany("Ataques")
                        .HasForeignKey("Cultura_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Serrana.Models.Praga", "Praga")
                        .WithMany("Ataques")
                        .HasForeignKey("Praga_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Serrana.Models.Combate", b =>
                {
                    b.HasOne("Serrana.Models.Agrotoxico", "Agrotoxico")
                        .WithMany("Combates")
                        .HasForeignKey("Agro_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Serrana.Models.Praga", "Praga")
                        .WithMany("Combates")
                        .HasForeignKey("Praga_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
